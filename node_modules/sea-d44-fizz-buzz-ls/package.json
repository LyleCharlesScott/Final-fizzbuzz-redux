{
  "name": "sea-d44-fizz-buzz-ls",
  "version": "1.0.1",
  "description": "sea d44 week 5 assignment 4",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LyleCharlesScott/fizzbuzz-redux__W5-A4.git"
  },
  "author": {
    "name": "Lyle Scott"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/LyleCharlesScott/fizzbuzz-redux__W5-A4/issues"
  },
  "homepage": "https://github.com/LyleCharlesScott/fizzbuzz-redux__W5-A4#readme",
  "readme": "# fizzbuzz-redux__W5-A4\n\nTonight's assignment: refactor your FizzBuzz into a library and publish it to the npm registry.\n\nYou will first refactor the object to have an `input` and an `output` method, instead of the \"read\" and \"write\" methods.\n\nJust like last night's homework, your constructor should accept arguments that change the strings \"Fizz\" and \"Buzz\" (e.g. `new FizzBuzz('Bleep', 'Blorp')`). The `input` method should accept two arguments, `min` and `max`â€”you may safely assume they are `Numbers`. `output` does not take any arguments, but _must_ return an array.\n\nYour module should expose a function using the CommonJS `module.exports` construct. I should be able to `npm install <your-module>` and use it like so:\n\n```\nvar FizzBuzz = require('<your-module>');\n\nvar buzzer = new FizzBuzz(); // Should accept string arguments that replace 'Fizz' and 'Buzz'\nbuzzer.input(1, 120);\n\nconsole.log(buzzer.output());\n```\n\nName your module `sea-d44-fizz-buzz-<your initials>` and publish it to the npm registry. And, as usual, fork this repo and submit a PR.\n\n\n",
  "readmeFilename": "README.md",
  "gitHead": "37b6f069925d9f9665e4d2226064932ff9ff4073",
  "_id": "sea-d44-fizz-buzz-ls@1.0.1",
  "_shasum": "2533f04aa5c5d8e006222ded419a9ef3d4bde144",
  "_from": "sea-d44-fizz-buzz-ls@*"
}
